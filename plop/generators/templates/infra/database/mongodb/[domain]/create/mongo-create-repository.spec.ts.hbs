import { describe, expect, test, afterAll, beforeEach } from 'vitest'
import { Create{{pascalCase name}}MongoRepository } from './mongo-create-{{kebabCase name}}-repository'
import { MongoHelper } from '../../utils'
import { Collection } from 'mongodb'
import { mockCreate{{pascalCase name}}Params } from '@test-mocks'

const makeSut = () => {
  return {
    sut: new Create{{pascalCase name}}MongoRepository(),
  }
}

let {{pascalCase name}}Collection: Collection

afterAll(async () => {
  await MongoHelper.disconnect()
})

beforeEach(async () => {
  await MongoHelper.connect((globalThis as any).__MONGO_URI__)
  {{pascalCase name}}Collection = await MongoHelper.getCollection('{{kebabCase name}}')
  await {{pascalCase name}}Collection.deleteMany({})
})

describe('Test Suite for mongo-create-{{kebabCase name}}-repository.spec', () => {
  test('Ensure that create -{{kebabCase name}} will return inserted params', async () => {
    const item = mockCreate{{pascalCase name}}Params()
    const { sut } = makeSut()
    const result = await sut.create(item)

    {{listFieldsForTests fields}}
   
  })
})
