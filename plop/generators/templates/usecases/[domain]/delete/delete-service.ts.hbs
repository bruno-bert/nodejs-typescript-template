import { Delete{{pascalCase name}}Model } from '@usecases'
import { Delete{{pascalCase name}}Protocol, Delete{{pascalCase name}}RepositoryProtocol } from './protocols'
import { ValidatorProtocol } from '@utils'
import { schema } from './delete-{{kebabCase name}}-service-schema'

export class DbDelete{{pascalCase name}} implements Delete{{pascalCase name}}Protocol {
  constructor(
    private readonly Delete{{pascalCase name}}Repository: Delete{{pascalCase name}}RepositoryProtocol,
    private readonly Delete{{pascalCase name}}Validator: ValidatorProtocol<Delete{{pascalCase name}}RepositoryProtocol.Params>,
  ) {}

  async map({
    id,
  }: Delete{{pascalCase name}}Model.Params): Promise<Delete{{pascalCase name}}RepositoryProtocol.Params> {
    return {
      id,
    }
  }

  async delete({
    id,
  }: Delete{{pascalCase name}}Model.Params): Promise<Delete{{pascalCase name}}Protocol.Result> {
    const params = await this.map({
      id,
    })

    this.Delete{{pascalCase name}}Validator.validate(schema, { id })

    return await this.Delete{{pascalCase name}}Repository.delete(params)
  }
}
